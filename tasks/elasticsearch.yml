---
- name: Add ElasticSearch apt repo.
  apt_repository:
    repo: "deb https://artifacts.elastic.co/packages/7.x/apt stable main"
    state: present
  notify:
    - reload systemd

- name: Install ElasticSearch.
  apt:
    name: elasticsearch
    state: latest
  notify:
    - reload systemd
    - restart elasticsearch

- name: Configure ElasticSearch.
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
    - regexp: 'cluster\.name:'
      line: 'cluster.name: {{ elk_cluster_name }}'
    - regexp: 'network\.host:'
      line: 'network.host: "localhost"'
      #    - regexp: 'bootstrap\.mlockall:'
      #      line: 'bootstrap.mlockall: true'

      # Massive reduction in load when cache field type set to "soft".
      # Permits GC on cached index objects:
      # See http://docs.oracle.com/javase/6/docs/api/java/lang/ref/SoftReference.html
      #    - regexp: 'index\.cache\.field\.type:'
      #line: 'index.cache.field.type: soft'

      # By default the ES cache is greedy. Let's set some sane limits to prevent OOMs.
      # See http://blog.sematext.com/2012/05/17/elasticsearch-cache-usage/
      #    - #regexp: 'index\.cache\.field\.max_size:'
      #line: 'index.cache.field.max_size: 50000'

      #    - regexp: 'index\.cache\.field\.expire:'
      #      line: 'index.cache.field.expire: 10m'

      # Force presence of snapshot config line, even though snapshots are disabled by default.
      # Doing this to prevent a failed snapshot action on the first attempt, since the handlers
      # will not have been run yet. Flushing the handlers may be a more elegant solution.
    - regexp: 'path\.repo:'
      line: 'path.repo: {{ elk_elasticsearch_snapshot_directory }}'
  notify:
    - restart elasticsearch

  # Set heap size to half of total system memory in megabytes,
  # provided host has more than 1GB of RAM. Don't exceed 31GB, though:
  # https://www.elastic.co/guide/en/elasticsearch/guide/current/heap-sizing.html
  # Using MB rather than GB to prevent rounding mistakes for odd numbers.
- name: Set fact for ElasticSearch heap size.
  set_fact:
    elasticsearch_heap_size: >-
      {{ ((ansible_memtotal_mb / 2) | int) if ansible_memtotal_mb < 65536
      else 31744 }}

- name: Configure ElasticSearch heap size.
  lineinfile:
    dest: /etc/default/elasticsearch
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
    - regexp: "^ES_HEAP_SIZE"
      line: "ES_HEAP_SIZE={{ elasticsearch_heap_size }}m"
    - regexp: "^MAX_LOCKED_MEMORY"
      line: "MAX_LOCKED_MEMORY=unlimited"
  notify: restart elasticsearch

- name: Raises memlock limits for elasticsearch in systemd config.
  lineinfile:
    dest: /usr/lib/systemd/system/elasticsearch.service
    regexp: "^#?LimitMEMLOCK="
    line: "LimitMEMLOCK=infinity"
    state: present
  notify:
    - reload systemd
    - restart elasticsearch

- name: Set PAM limits for elasticsearch user.
  pam_limits:
    domain: "{{ item.domain }}"
    limit_item: "{{ item.limit_item }}"
    limit_type: "{{ item.limit_type }}"
    value: "{{ item.value }}"
    backup: yes
  with_items: "{{ elk_elasticsearch_pam_limits }}"

- name: Start elasticsearch service.
  service:
    name: elasticsearch
    state: started
    enabled: yes
  register: elasticsearch_service_start_result

  # Wait a bit for the service to start if it wasn't running. Elasticsearch can take
  # dozens of seconds to bootstrap itself.
- name: Wait for elasticsearch service to start.
  pause:
    seconds: 20
  when: elasticsearch_service_start_result.changed
