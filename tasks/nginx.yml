---
# In production we may want to use Apache, rather than Nginx,
# since Kevin and Conor have more experience with Apache.
# To do so, the FPF apache config should be broken out into a role,
# so it can be included here and used with `fpf-ssl-certs`.
# In the meantime, tossing together a reverse proxy via nginx was
# pretty trivial.

- name: Install nginx (for Kibana reverse proxy).
  apt:
    name: nginx
    state: present

- name: Write Kibana Nginx config.
  template:
    src: kibana-nginx.conf.j2
    dest: /etc/nginx/conf.d/kibana.conf
    owner: root
    group: root
    mode: "0644"
  notify: restart nginx

- name: Install passlib (required for writing htpasswd file).
  apt:
    name: python-passlib
    state: present

- name: Create htpasswd file to restrict access to Kibana web interface.
  htpasswd:
    name: "{{ elk_kibana_username }}"
    password: "{{ elk_kibana_password }}"
    path: /etc/nginx/conf.d/kibana.htpasswd
    owner: root
    # Assuming Debian 'www-data' web user for nginx.
    group: www-data
    mode: "0640"
  notify: restart nginx

- name: Disable default Nginx site.
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: restart nginx

- name: Start nginx service.
  service:
    name: nginx
    state: started
    enabled: yes
